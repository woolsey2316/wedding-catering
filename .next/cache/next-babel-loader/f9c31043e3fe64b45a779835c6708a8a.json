{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\David\\\\github\\\\wedding-catering\\\\components\\\\markdown-components\\\\BlockQuote.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\n\nconst BlockQuote = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n      className: \"absolute font-playfair text-5xl text-coral rounded-full leading-tight\",\n      children: \"\\u201C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"blockquote\", _objectSpread(_objectSpread({}, props), {}, {\n      className: \"ml-8 mt-8 font-rubik text-gray-900 italic text-5xl leading-loose\"\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport { BlockQuote };","map":{"version":3,"sources":["C:/Users/David/github/wedding-catering/components/markdown-components/BlockQuote.tsx"],"names":["React","BlockQuote","props"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAoB,GAAIC,KAAD,IAAW;AACtC,sBACE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,uEAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,sDAAgBA,KAAhB;AAAuB,MAAA,SAAS,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD,CAPD;;AAQA,SAASD,UAAT","sourcesContent":["import React from 'react'\r\n\r\nconst BlockQuote: React.FC = (props) => {\r\n  return (\r\n    <>\r\n      <h6 className=\"absolute font-playfair text-5xl text-coral rounded-full leading-tight\">â€œ</h6>\r\n      <blockquote {...props} className=\"ml-8 mt-8 font-rubik text-gray-900 italic text-5xl leading-loose\"></blockquote>\r\n    </>\r\n  )\r\n}\r\nexport { BlockQuote }"]},"metadata":{},"sourceType":"module"}