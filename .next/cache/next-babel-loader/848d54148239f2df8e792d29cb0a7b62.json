{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\n\nfunction CommentForm() {\n  function isValidEmail() {\n    return /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(user.email) || user.email === '';\n  }\n\n  const {\n    0: user,\n    1: setUser\n  } = useState({\n    name: '',\n    email: '',\n    subject: '',\n    message: '',\n    submitted: false\n  });\n\n  function setSubmitted(bool) {\n    setUser(user => _objectSpread(_objectSpread({}, user), {}, {\n      submitted: bool\n    }));\n  }\n\n  function handleTextAreaChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    setUser(user => _objectSpread(_objectSpread({}, user), {}, {\n      [name]: value\n    }));\n  }\n\n  function handleInputChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    setUser(user => _objectSpread(_objectSpread({}, user), {}, {\n      [name]: value\n    }));\n  }\n\n  function allFieldsExist() {\n    Object.keys(user).forEach(key => {\n      if (user[key] === '') {\n        return false;\n      } //use key and value here\n\n    });\n    return true;\n  } // dispatch an action to the redux store, updates 'user' object\n\n\n  function handleSubmit() {\n    //console.log(`%cuser details: ${JSON.stringify(user)}`, 'color:green')\n    setSubmitted(true);\n\n    if (allFieldsExist()) {\n      console.log(\"comment sent\");\n    }\n  }\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: \"text-center mt-2\",\n    children: /*#__PURE__*/_jsxs(\"form\", {\n      name: \"form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"col-span-12\",\n        children: [/*#__PURE__*/_jsx(\"textarea\", {\n          name: \"message\",\n          rows: 5,\n          className: \"border border-gray-400 px-4 py-2 w-full mt-4 placeholder-gray-600 text-gray-700\",\n          style: {\n            borderColor: isValidEmail() ? '' : '#D32929'\n          },\n          placeholder: \"Message\",\n          value: user.message,\n          onChange: handleTextAreaChange\n        }), user.submitted && !user.message && /*#__PURE__*/_jsx(\"div\", {\n          className: \"text-theme-6 mt-2\",\n          children: \"Comment is required\"\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"grid grid-cols-12 gap-8\",\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: \"col-span-6\",\n          children: [/*#__PURE__*/_jsx(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            className: \"border border-gray-400 px-4 py-2 w-full mt-4 placeholder-gray-600 text-gray-700\",\n            placeholder: \"Full Name*\",\n            value: user.name,\n            onChange: handleInputChange\n          }), user.submitted && !user.name && /*#__PURE__*/_jsx(\"div\", {\n            className: \"text-theme-6 mt-2\",\n            children: \"Full Name is required\"\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"col-span-6\",\n          children: [/*#__PURE__*/_jsx(\"input\", {\n            type: \"text\",\n            name: \"email\",\n            className: \"border border-gray-400 px-4 py-2 w-full mt-4 placeholder-gray-600 text-gray-700\",\n            style: {\n              borderColor: isValidEmail() ? '' : '#D32929'\n            },\n            placeholder: \"Email*\",\n            value: user.email,\n            onChange: handleInputChange\n          }), user.submitted && !user.email && /*#__PURE__*/_jsx(\"div\", {\n            className: \"text-theme-6 mt-2\",\n            children: \"Email is required\"\n          })]\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"w-full\",\n        children: /*#__PURE__*/_jsx(\"button\", {\n          type: \"submit\",\n          className: \"hover:text-white font-rubik text-sm font-medium cursor-pointer py-2 px-8 mt-5 mx-auto hover:bg-coral bg-gray-200 text-grey-700 transition-all duration-300 ease-in-out\",\n          children: \"SUBMIT\"\n        })\n      })]\n    })\n  });\n}\n\nexport { CommentForm };","map":null,"metadata":{},"sourceType":"module"}